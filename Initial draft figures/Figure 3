#

library(dplyr)
library(Seurat)
library(patchwork)
library(ggplot2)
library(dittoSeq)
library(RColorBrewer)

#The D-score assignment and seurat object created is the same as described in the Figure 2 code. If already saved this object can skip to line 49. 

#Use D-score to assign SBO
#Cells were sequenced across two channels so need to combine data
setwd("/Users/jessicaking/Documents/PhD/Spheroid-scRNAseq")
source("DScore.R")

channel1<-dscore(
  path="/Users/jessicaking/Documents/PhD/Spheroid-scRNAseq/cellranger/3-1-GEX/filtered_feature_bc_matrix", 
  # List of features to include
  features=c("SBO03", "SBO04", "SBO05", "SBO06", "SBO07", "SBO08"),
  # Name of the assignment category csv output file
  cat.filename="channel1-Category-Cellhashing-Dscore.csv"
)

channel2<-dscore(
  path="/Users/jessicaking/Documents/PhD/Spheroid-scRNAseq/cellranger/3-2-GEX/filtered_feature_bc_matrix", 
  # List of features to include
  features=c("SBO03", "SBO04", "SBO05", "SBO06", "SBO07", "SBO08"),
  # Name of the assignment category csv output file
  cat.filename="channel2-Category-Cellhashing-Dscore.csv"
)

seurat_combined <- merge(channel1, y=c(channel2))

seurat_combined[["percent.mt"]] <- PercentageFeatureSet(seurat_combined, pattern = "^MT-")
VlnPlot(seurat_combined, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot1 <- FeatureScatter(seurat_combined, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(seurat_combined, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
seurat_combined <- subset(seurat_combined, subset = nFeature_RNA > 200 & nFeature_RNA < 95000 & percent.mt < 15)  
print(seurat_combined) #11471 cells

#add sample names
samples <- c(SBO03 = "drug-core", SBO04 = "control-core", SBO05 = "drug-middle", 
             SBO06 = "control-middle", SBO07 = "drug-periphery", SBO08 = "control-periphery")
names <- as.character(samples[seurat_combined$dscore])
seurat_combined <- AddMetaData(seurat_combined, metadata = names, col.name = 'Sample')

####Subset out unassigned cells
drug1 <- subset(x = seurat_combined, subset = Sample == c('drug-core'))
drug2 <- subset(x = seurat_combined, subset = Sample == c('drug-middle'))
drug3 <- subset(x = seurat_combined, subset = Sample == c('drug-periphery'))
control4 <- subset(x = seurat_combined, subset = Sample == c('control-core'))
control5 <- subset(x = seurat_combined, subset = Sample == c('control-middle'))
control6<- subset(x = seurat_combined, subset = Sample == c('control-periphery'))
ALL <- merge(drug1, y=c(drug2, drug3, control4, control5, control6))

#Pre-processing
normdata <- NormalizeData(ALL, normalization.method = "LogNormalize", scale.factor = 10000)
normdata <- FindVariableFeatures(normdata, selection.method = "vst", nfeatures = 3000)
top10 <- head(VariableFeatures(normdata), 10)
plot1 <- VariableFeaturePlot(normdata)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot2
all.genes <- rownames(normdata)
scaled_data <- ScaleData(normdata) 
dim_red <- RunPCA(scaled_data, features = VariableFeatures(object = scaled_data))
print(dim_red[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(dim_red, dims = 1:2, reduction = "pca")
DimPlot(dim_red, reduction = "pca")
DimHeatmap(dim_red, dims = 1:20, cells = 500, balanced = TRUE)
ElbowPlot(dim_red)
SCdata <- FindNeighbors(dim_red, dims = 1:20)
SCdata <- FindClusters(SCdata, resolution = 0.4)
SCdata <- RunUMAP(SCdata, dims = 1:20)

#Adding treatment names to metadata
samples <- c(SBO03 = "Drug", SBO04 = "Vehicle", SBO05 = "Drug", 
             SBO06 = "Vehicle", SBO07 = "Drug", SBO08 = "Vehicle")
names <- as.character(samples[SCdata$dscore])
SCdata <- AddMetaData(SCdata, metadata = names, col.name = 'Treatment')

DimPlot(SCdata, reduction = "umap", group.by = "Treatment", cols = c("#8D3666", "#009E73"),
        pt.size = 0.5, label = F) + theme(text = element_text(size = 12))

################################# Cell cycle analysis ################################# 
s.genes <- cc.genes.updated.2019$s.genes
s.genes <- s.genes[!is.na(match(s.genes, rownames(SCdata)))] # Extract S phase genes 
g2m.genes <- cc.genes.updated.2019$g2m.genes
g2m.genes <- g2m.genes[!is.na(match(g2m.genes, rownames(SCdata)))] # Extract G2M phase genes 

cellcycle = CellCycleScoring(SCdata, s.features = s.genes, g2m.features = g2m.genes, set.ident = FALSE) 

DimPlot(cellcycle, reduction = "umap", group.by = "Phase", cols = c("#E0AFCA", "#005685","#A04700")) + 
  theme(text = element_text(size = 12))

dittoBarPlot(cellcycle, "Phase", group.by = "seurat_clusters",
             data.out = TRUE)

################################# Differential gene expression analysis ################################# 

SCdata  <- SetIdent(SCdata, value = SCdata$Treatment)

treatment_markers <- FindAllMarkers(SCdata, min.pct = 0.25, 
                                      logfc.threshold = 0.25, return.thresh = 0.05)

cols2 <- c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F")

Avg_exp <- AverageExpression(SCdata, assays = "RNA",return.seurat = TRUE, group.by = "Treatment", 
                             slot = "scale.data")

DoHeatmap(Avg_exp, features = treatment_markers$gene, disp.min = -2, disp.max = 2,
          slot = "scale.data",
          label = TRUE, size = 3, angle = 38) + 
  scale_fill_gradientn(colors = cols2) + guides(colour = F) + coord_flip()

################################# Reactome pathway analysis for drug treated spheroids ################################# 
library(Seurat)
library(escape)
library(SingleCellExperiment)
library(RColorBrewer)
library(dittoSeq)
library(msigdbr)
library(GSEABase)
library(fgsea)

setwd("/Users/jessicaking/Documents/PhD/Spheroid-scRNAseq") #Set directory to where "c2.cp.reactome.v2023.1.Hs.symbols.gmt.txt" is saved. 

#Subset seurat object for just the three drug treated samples -> 'drug-core', 'drug-middle', 'drug-periphery'

SCdata  <- SetIdent(SCdata, value = SCdata$Sample)
Avg_exp <- AverageExpression(SCdata, assays = "RNA",return.seurat = TRUE, group.by = "Sample", slot = "data")
sce <- as.SingleCellExperiment(Avg_exp, assay = "RNA")

pathways.react <- gmtPathways("c2.cp.reactome.v2023.1.Hs.symbols.gmt.txt")
react.seurat <- enrichIt(obj = sce, gene.sets = pathways.react, groups = 1000, cores = 10)

met.data <- merge(colData(sce), react.seurat, by = "row.names", all = TRUE)
row.names(met.data) <- met.data$Row.names
met.data$Row.names <- NULL
colData(sce) <- met.data

cols2 <- c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F")

dittoHeatmap(sce, genes = NULL, metas = c("REACTOME_APOPTOSIS",
                                          "REACTOME_TP53_REGULATES_TRANSCRIPTION_OF_CASPASE_ACTIVATORS_AND_CASPASES",
                                          "REACTOME_PROGRAMMED_CELL_DEATH",
                                          "REACTOME_REGULATED_NECROSIS"),
             annot.colors = c(brewer.pal(6, "Set1")),
             scaled.to.max = FALSE,
             heatmap.colors = colorRampPalette(cols2) (30),
             border_color = "black",
             cluster_cols = FALSE, cluster_rows = FALSE,
             fontsize = 8)


#---------categories-------------
#CELL CYCLE
REACTOME_G1_S_DNA_DAMAGE_CHECKPOINTS
REACTOME_G2_M_CHECKPOINTS
REACTOME_MITOTIC_SPINDLE_CHECKPOINT
REACTOME_S_PHASE
REACTOME_SYNTHESIS_OF_DNA
REACTOME_APC_C_MEDIATED_DEGRADATION_OF_CELL_CYCLE_PROTEINS

#CELL CELL COMUNICATION
REACTOME_CELL_CELL_JUNCTION_ORGANIZATION
REACTOME_ADHERENS_JUNCTIONS_INTERACTIONS
REACTOME_TIGHT_JUNCTION_INTERACTIONS
REACTOME_CELL_EXTRACELLULAR_MATRIX_INTERACTIONS
REACTOME_SIGNAL_REGULATORY_PROTEIN_FAMILY_INTERACTIONS
REACTOME_NEPHRIN_FAMILY_INTERACTIONS

#CELLULAR RESPONSE TO STRESS/STIMULI
REACTOME_CELLULAR_RESPONSE_TO_HYPOXIA
REACTOME_CELLULAR_RESPONSE_TO_HEAT_STRESS
REACTOME_CELLULAR_SENESCENCE
REACTOME_ONCOGENE_INDUCED_SENESCENCE
REACTOME_OXIDATIVE_STRESS_INDUCED_SENESCENCE
REACTOME_DNA_DAMAGE_TELOMERE_STRESS_INDUCED_SENESCENCE
REACTOME_CELLULAR_RESPONSE_TO_CHEMICAL_STRESS
REACTOME_CELLULAR_RESPONSE_TO_STARVATION

#DNA REPAIR
REACTOME_BASE_EXCISION_REPAIR
REACTOME_DNA_DAMAGE_BYPASS
REACTOME_DNA_DAMAGE_REVERSAL
REACTOME_DNA_DOUBLE_STRAND_BREAK_REPAIR
REACTOME_NUCLEOTIDE_EXCISION_REPAIR

#DNA REPLICATION and transcription
REACTOME_DNA_REPLICATION_PRE_INITIATION
REACTOME_SYNTHESIS_OF_DNA
REACTOME_RNA_POLYMERASE_I_TRANSCRIPTION
REACTOME_RNA_POLYMERASE_II_TRANSCRIPTION
REACTOME_RNA_POLYMERASE_III_TRANSCRIPTION
REACTOME_GENE_SILENCING_BY_RNA

#PROGRAMMED CELL DEATH
REACTOME_APOPTOSIS
REACTOME_CASPASE_ACTIVATION_VIA_DEATH_RECEPTORS_IN_THE_PRESENCE_OF_LIGAND
REACTOME_CASPASE_ACTIVATION_VIA_DEPENDENCE_RECEPTORS_IN_THE_ABSENCE_OF_LIGAND
REACTOME_PROGRAMMED_CELL_DEATH
REACTOME_REGULATED_NECROSIS






