#Figure 5

#Use seurat object created for Figure 4 containing all samples (control and drug treated).

library(dplyr)
library(Seurat)
library(patchwork)
library(ggplot2)
library(dittoSeq)
library(RColorBrewer)

DimPlot(SCdata, reduction = "umap", pt.size = 0.5, label = T) + theme(text = element_text(size = 12))

dittoBarPlot(SCdata, var = "seurat_clusters", group.by = "Sample", 
             color.panel = brewer.pal(10, "Spectral"),
             data.out = TRUE) + theme(plot.title = element_blank(), legend.position = "right",
        text = element_text(size = 18)) + ylab("Proportion of cells")


#----------------------remove cluster 6 and re-name clusters------------------#

c1 <- subset(x = SCdata, subset = seurat_clusters == c('0'))
c2 <- subset(x = SCdata, subset = seurat_clusters == c('1'))
c3 <- subset(x = SCdata, subset = seurat_clusters == c('2'))
c4 <- subset(x = SCdata, subset = seurat_clusters == c('3'))
c5 <- subset(x = SCdata, subset = seurat_clusters == c('4'))
c6 <- subset(x = SCdata, subset = seurat_clusters == c('5'))
c7 <- subset(x = SCdata, subset = seurat_clusters == c('7'))
c8 <- subset(x = SCdata, subset = seurat_clusters == c('8'))

ALL <- merge(c1, y=c(c2, c3, c4, c5, c6, c7, c8))
normdata <- NormalizeData(ALL, normalization.method = "LogNormalize", scale.factor = 10000)
normdata <- FindVariableFeatures(normdata, selection.method = "vst", nfeatures = 3000)
all.genes <- rownames(normdata)
scaled_data <- ScaleData(normdata)
dim_red <- RunPCA(scaled_data, features = VariableFeatures(object = scaled_data))
SCdata2 <- FindNeighbors(dim_red, dims = 1:20)
SCdata2 <- FindClusters(SCdata2, resolution = 0.4)
SCdata2 <- RunUMAP(SCdata2, dims = 1:20)

rm(ALL, c1, c2, c3, c4, c5, c6, c7, c8,normdata, dim_red ,scaled_data)

DimPlot(SCdata2, reduction = "umap", pt.size = 0.5, label = T) + theme(text = element_text(size = 12))

new_clusters <- c('0' = 4, '1' = 5, '2'= 1, '3' = 6, '4' = 2, '5' = 3, '6' = 7, '7' = 8)
names <- as.character(new_clusters[SCdata2$seurat_clusters])
SCdata2 <- AddMetaData(SCdata2, metadata = names, col.name = 'new_clusters')
SCdata2$new_clusters
SCdata2  <- SetIdent(SCdata2, value = SCdata2$new_clusters)

DimPlot(SCdata2, reduction = "umap", cols = c(brewer.pal(3,"Greens"), brewer.pal(5, "Purples")),
        order = c('8', '7', '6', '5', '4', '3', '2', '1'),
        pt.size = 0.5, label = T) + 
  theme(text = element_text(size = 12))

dittoBarPlot(SCdata2, var = "new_clusters", group.by = "new_clusters",
             color.panel = c(brewer.pal(3,"Greens"), brewer.pal(5, "Purples")),
             data.out = FALSE) + ylab("Proportion of cells") +
  theme(plot.title = element_blank(), axis.title.x = element_blank(), 
        text = element_text(colour = "black", size = 12))

############################################ Differential gene expression ############################################
all.markers_markers <- FindAllMarkers(SCdata2, min.pct = 0.25, 
                                      logfc.threshold = 0.25, return.thresh = 0.05)

all.markers_markers %>%
  group_by(cluster) %>%
  top_n(n = 5, wt = avg_log2FC) -> top5

cols2 <- c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0", "white","#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F")

DoHeatmap(SCdata2, features = top5$gene, group.by = "new_clusters", label = TRUE,
          size = 3, angle = 38) + 
  scale_fill_gradientn(colors = cols2) + guides(colour = F)

############################################ Ranked pathway analysis ############################################

library(Seurat)
library(msigdb.data)
library(fgsea)
library(data.table)
library(ggplot2)
library(msigdbr)
library(tidyverse)
library(dittoSeq)

#set working directory to where "c2.cp.reactome.v2023.1.Hs.symbols.gmt.txt" is saved. 

SCdata  <- SetIdent(SCdata, value = SCdata$Sample)

all.markers_markers <- FindAllMarkers(SCdata, min.pct = 0.25, 
                                      logfc.threshold = 0.25, return.thresh = 0.05)

res2 <- all.markers_markers %>% 
  dplyr::select(gene, avg_log2FC) %>% 
  na.omit() %>% 
  distinct() %>% 
  group_by(gene) %>% 
  summarize(stat=mean(avg_log2FC))
res2

ranks <- deframe(res2)
head(ranks, 20)

pathways.reactome <- gmtPathways("c2.cp.reactome.v2023.1.Hs.symbols.gmt.txt")
pathways.reactome %>% 
  head() %>% 
  lapply(head)

fgseaRes <- fgsea(pathways.reactome, stats=ranks)
head(fgseaRes[order(pval), ])

topPathwaysUp <- fgseaRes[ES > 0][head(order(pval), n=30), pathway]
topPathwaysDown <- fgseaRes[ES < 0][head(order(pval), n=30), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))

fgseaResTidy <- fgseaRes %>%
  as_tibble() %>%
  arrange(desc(NES))

sce <- as.SingleCellExperiment(SCdata, assay = "RNA")

pathways.react <- gmtPathways("c2.cp.reactome.v2023.1.Hs.symbols.gmt.txt")
react.seurat2 <- enrichIt(obj = sce, gene.sets = pathways.reactome, groups = 1000, cores = 10)

met.data <- merge(colData(sce), react.seurat2, by = "row.names", all = TRUE)
row.names(met.data) <- met.data$Row.names
met.data$Row.names <- NULL
colData(sce) <- met.data

dittoDotPlot(sce, vars = topPathwaysUp, group.by = 'ident', min.color = "blue", max.color = "#FFCB57",
             adjustment = "z-score")  






